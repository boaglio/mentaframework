/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:36:52 PM
 * Time to generate: 00:18.834 seconds
 *
 */

package org.mentawai.action;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import javax.servlet.ServletContext;
import org.mentawai.core.ApplicationContext;
import org.mentawai.core.Context;
import org.mentawai.core.MapContext;

public class LogoutActionAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return LogoutAction.class;
    }
    
    public void testConstructor() throws Throwable {
        LogoutAction logoutAction = new LogoutAction();
        assertNotNull("logoutAction.msgContext", getPrivateField(logoutAction, "msgContext"));
    }
    
    public void testExecute() throws Throwable {
        Context context = new MapContext();
        LogoutAction logoutAction = new LogoutAction();
        logoutAction.setSession(context);
        String result = logoutAction.execute();
        assertEquals("result", "success", result);
        assertSame("logoutAction.getSession()", context, logoutAction.getSession());
    }
    
    public void testLogout() throws Throwable {
        Context context = new MapContext();
        LogoutAction logoutAction = new LogoutAction();
        logoutAction.setSession(context);
        logoutAction.logout();
        assertSame("logoutAction.getSession()", context, logoutAction.getSession());
    }
    
    public void testExecuteThrowsNullPointerException() throws Throwable {
        LogoutAction logoutAction = new LogoutAction();
        try {
            logoutAction.execute();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LogoutAction.class, ex);
            assertNull("logoutAction.getSession()", logoutAction.getSession());
        }
    }
    
    public void testExecuteThrowsUnsupportedOperationException() throws Throwable {
        Context context = new ApplicationContext((ServletContext) Mockingbird.getProxyObject(ServletContext.class));
        LogoutAction logoutAction = new LogoutAction();
        logoutAction.setSession(context);
        Mockingbird.enterTestMode(LogoutAction.class);
        try {
            logoutAction.execute();
            fail("Expected UnsupportedOperationException to be thrown");
        } catch (UnsupportedOperationException ex) {
            assertEquals("ex.getMessage()", "reset() is not supported for ApplicationContext!", ex.getMessage());
            assertThrownBy(ApplicationContext.class, ex);
            assertSame("logoutAction.getSession()", context, logoutAction.getSession());
        }
    }
    
    public void testLogoutThrowsNullPointerException() throws Throwable {
        LogoutAction logoutAction = new LogoutAction();
        try {
            logoutAction.logout();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(LogoutAction.class, ex);
            assertNull("logoutAction.getSession()", logoutAction.getSession());
        }
    }
    
    public void testLogoutThrowsUnsupportedOperationException() throws Throwable {
        Context context = new ApplicationContext((ServletContext) Mockingbird.getProxyObject(ServletContext.class));
        LogoutAction logoutAction = new LogoutAction();
        logoutAction.setSession(context);
        Mockingbird.enterTestMode(LogoutAction.class);
        try {
            logoutAction.logout();
            fail("Expected UnsupportedOperationException to be thrown");
        } catch (UnsupportedOperationException ex) {
            assertEquals("ex.getMessage()", "reset() is not supported for ApplicationContext!", ex.getMessage());
            assertThrownBy(ApplicationContext.class, ex);
            assertSame("logoutAction.getSession()", context, logoutAction.getSession());
        }
    }
}


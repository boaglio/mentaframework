/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:24:07 PM
 * Time to generate: 00:23.136 seconds
 *
 */

package org.mentawai.filter;

import com.agitar.lib.junit.AgitarTestCase;
import org.mentawai.action.LogoutAction;
import org.mentawai.action.SuccessAction;
import org.mentawai.core.Action;
import org.mentawai.core.ActionException;
import org.mentawai.core.FilterException;
import org.mentawai.core.InvocationChain;
import org.mentawai.core.PojoAction;
import org.mentawai.util.InjectionUtils;
import org.mentawai.util.MockAction;

public class VOFilterAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return VOFilter.class;
    }
    
    public void testConstructor() throws Throwable {
        VOFilter vOFilter = new VOFilter("testVOFilterKey", Integer.class, "testVOFilterPrefix");
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertEquals("vOFilter.prefix", "testVOFilterPrefix", getPrivateField(vOFilter, "prefix"));
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor1() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey");
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertNull("vOFilter.prefix", getPrivateField(vOFilter, "prefix"));
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor2() throws Throwable {
        VOFilter vOFilter = new VOFilter(int.class, "testVOFilterKey", true);
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertNull("vOFilter.prefix", getPrivateField(vOFilter, "prefix"));
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", int.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor3() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true, false, "testVOFilterPrefix");
        assertFalse("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertEquals("vOFilter.prefix", "testVOFilterPrefix", getPrivateField(vOFilter, "prefix"));
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor4() throws Throwable {
        VOFilter vOFilter = new VOFilter("testVOFilterKey", Integer.class);
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertNull("vOFilter.prefix", getPrivateField(vOFilter, "prefix"));
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor5() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true, "testVOFilterPrefix");
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertEquals("vOFilter.objectKey", "testVOFilterKey", getPrivateField(vOFilter, "objectKey"));
        assertEquals("vOFilter.prefix", "testVOFilterPrefix", getPrivateField(vOFilter, "prefix"));
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor6() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, true);
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertNull("vOFilter.objectKey", getPrivateField(vOFilter, "objectKey"));
        assertNull("vOFilter.prefix", getPrivateField(vOFilter, "prefix"));
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testConstructor7() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class);
        assertTrue("vOFilter.convert", ((Boolean) getPrivateField(vOFilter, "convert")).booleanValue());
        assertTrue("vOFilter.tryField", ((Boolean) getPrivateField(vOFilter, "tryField")).booleanValue());
        assertNull("vOFilter.prefix", getPrivateField(vOFilter, "prefix"));
        assertNull("vOFilter.objectKey", getPrivateField(vOFilter, "objectKey"));
        assertTrue("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testDestroy() throws Throwable {
        new VOFilter(Integer.class).destroy();
        assertTrue("Test call resulted in expected outcome", true);
    }
    
    public void testFilter() throws Throwable {
        VOFilter vOFilter = new VOFilter(String.class, "testVOFilterKey", true);
        String result = vOFilter.filter(new InvocationChain("testVOFilterActionName", new MockAction()));
        assertEquals("result", "success", result);
        assertEquals("vOFilter.targetClass", String.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testFilter1() throws Throwable {
        VOFilter vOFilter = new VOFilter(String.class, (String) null, true);
        String result = vOFilter.filter(new InvocationChain("testVOFilterActionName", new MockAction()));
        assertEquals("result", "success", result);
        assertEquals("vOFilter.targetClass", String.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testGetTarget() throws Throwable {
        VOFilter vOFilter = new VOFilter(Object.class, "testVOFilterKey", true);
        Object result = callPrivateMethod("org.mentawai.filter.VOFilter", "getTarget", new Class[] {}, vOFilter, new Object[] {});
        assertNotNull("result", result);
        assertEquals("vOFilter.targetClass", Object.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testSetConvertNullToFalse() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey");
        vOFilter.setConvertNullToFalse(false);
        assertFalse("vOFilter.convertNullToFalse", ((Boolean) getPrivateField(vOFilter, "convertNullToFalse")).booleanValue());
    }
    
    public void testSetTarget() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, (String) null, true);
        callPrivateMethod("org.mentawai.filter.VOFilter", "setTarget", new Class[] {Action.class, Object.class}, vOFilter, new Object[] {new MockAction(), new Integer(0)});
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testSetTarget1() throws Throwable {
        Action mockAction = new MockAction();
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true);
        callPrivateMethod("org.mentawai.filter.VOFilter", "setTarget", new Class[] {Action.class, Object.class}, vOFilter, new Object[] {mockAction, mockAction});
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testToString() throws Throwable {
        VOFilter vOFilter = new VOFilter(char.class, (String) null);
        String result = vOFilter.toString();
        assertEquals("result", "VOFilter: Class=char Key=char", result);
        assertEquals("vOFilter.targetClass", char.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testToString1() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true);
        String result = vOFilter.toString();
        assertEquals("result", "VOFilter: Class=java.lang.Integer Key=testVOFilterKey", result);
        assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
    }
    
    public void testFilterThrowsActionException() throws Throwable {
        VOFilter vOFilter = new VOFilter(Object.class, "testVOFilterKey", true, "testVOFilterPrefix");
        InvocationChain chain = new InvocationChain("testVOFilterActionName", new MockAction());
        chain.setInnerAction("testVOFilterInnerAction");
        try {
            vOFilter.filter(chain);
            fail("Expected ActionException to be thrown");
        } catch (ActionException ex) {
            assertEquals("ex.getMessage()", "The inner action does not exist: testVOFilterInnerAction", ex.getMessage());
            assertThrownBy(InvocationChain.class, ex);
            assertNull("ex.getCause()", ex.getCause());
            assertEquals("vOFilter.targetClass", Object.class, getPrivateField(vOFilter, "targetClass"));
            assertEquals("chain.getActionName()", "testVOFilterActionName", chain.getActionName());
        }
    }
    
    public void testFilterThrowsFilterException() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true, "testVOFilterPrefix");
        InvocationChain chain = new InvocationChain("testVOFilterActionName", new MockAction());
        try {
            vOFilter.filter(chain);
            fail("Expected FilterException to be thrown");
        } catch (FilterException ex) {
            assertEquals("ex.getMessage()", "java.lang.Integer", ex.getMessage());
            assertThrownBy(Class.class, ex);
            assertEquals("ex.getCause().getMessage()", "java.lang.Integer", ex.getCause().getMessage());
            assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
            assertEquals("chain.getActionName()", "testVOFilterActionName", chain.getActionName());
        }
    }
    
    public void testFilterThrowsNullPointerException() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true, "testVOFilterPrefix");
        try {
            vOFilter.filter(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(VOFilter.class, ex);
            assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
        }
    }
    
    public void testFilterThrowsNullPointerException1() throws Throwable {
        VOFilter vOFilter = new VOFilter(Object.class, "testVOFilterKey", true, false, "testVOFilterPrefix");
        InvocationChain chain = new InvocationChain("testVOFilterActionName", new PojoAction(""));
        try {
            vOFilter.filter(chain);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(VOFilter.class, ex);
            assertEquals("vOFilter.targetClass", Object.class, getPrivateField(vOFilter, "targetClass"));
            assertEquals("chain.getActionName()", "testVOFilterActionName", chain.getActionName());
        }
    }
    
    public void testFilterThrowsNullPointerException2() throws Throwable {
        VOFilter vOFilter = new VOFilter(String.class, "testVOFilterKey", true, false, "testVOFilterPrefix");
        InvocationChain chain = new InvocationChain("testVOFilterActionName", new SuccessAction());
        try {
            vOFilter.filter(chain);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(InjectionUtils.class, ex);
            assertEquals("vOFilter.targetClass", String.class, getPrivateField(vOFilter, "targetClass"));
            assertEquals("chain.getActionName()", "testVOFilterActionName", chain.getActionName());
        }
    }
    
    public void testGetTargetThrowsFilterException() throws Throwable {
        VOFilter vOFilter = new VOFilter(Integer.class, "testVOFilterKey", true);
        try {
            callPrivateMethod("org.mentawai.filter.VOFilter", "getTarget", new Class[] {}, vOFilter, new Object[] {});
            fail("Expected FilterException to be thrown");
        } catch (FilterException ex) {
            assertEquals("ex.getMessage()", "java.lang.Integer", ex.getMessage());
            assertThrownBy(Class.class, ex);
            assertEquals("ex.getCause().getMessage()", "java.lang.Integer", ex.getCause().getMessage());
            assertEquals("vOFilter.targetClass", Integer.class, getPrivateField(vOFilter, "targetClass"));
        }
    }
    
    public void testSetTargetThrowsNullPointerException() throws Throwable {
        VOFilter vOFilter = new VOFilter(void.class, (String) null, true);
        Action logoutAction = new LogoutAction();
        try {
            callPrivateMethod("org.mentawai.filter.VOFilter", "setTarget", new Class[] {Action.class, Object.class}, vOFilter, new Object[] {logoutAction, ""});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(VOFilter.class, ex);
            assertEquals("vOFilter.targetClass", void.class, getPrivateField(vOFilter, "targetClass"));
        }
    }
    
    public void testSetTargetThrowsNullPointerException1() throws Throwable {
        VOFilter vOFilter = new VOFilter(String.class, "testVOFilterKey", true, false, "testVOFilterPrefix");
        Action logoutAction = new LogoutAction();
        try {
            callPrivateMethod("org.mentawai.filter.VOFilter", "setTarget", new Class[] {Action.class, Object.class}, vOFilter, new Object[] {logoutAction, "testString"});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(VOFilter.class, ex);
            assertEquals("vOFilter.targetClass", String.class, getPrivateField(vOFilter, "targetClass"));
        }
    }
    
    public void testToStringThrowsNullPointerException() throws Throwable {
        VOFilter vOFilter = new VOFilter((Class) null, "testVOFilterKey", true);
        try {
            vOFilter.toString();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(VOFilter.class, ex);
            assertNull("vOFilter.targetClass", getPrivateField(vOFilter, "targetClass"));
        }
    }
}


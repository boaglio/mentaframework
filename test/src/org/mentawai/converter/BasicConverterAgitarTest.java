/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:24:16 PM
 * Time to generate: 00:17.192 seconds
 *
 */

package org.mentawai.converter;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import org.mentawai.action.SuccessAction;
import org.mentawai.core.Action;
import org.mentawai.core.Input;
import org.mentawai.util.MockAction;

public class BasicConverterAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return BasicConverter.class;
    }
    
    public void testAllowNull() throws Throwable {
        BasicConverter sQLToUtilDataConverter = new SQLToUtilDataConverter();
        boolean result = sQLToUtilDataConverter.allowNull();
        assertFalse("result", result);
    }
    
    public void testConvert() throws Throwable {
        Boolean result = (Boolean) new BooleanConverter(true).convert("testBasicConverterField", new MockAction());
        assertFalse("result", result.booleanValue());
    }
    
    public void testConvertWithAggressiveMocks() throws Throwable {
        BasicConverter basicConverter = (BasicConverter) Mockingbird.getProxyObject(BasicConverter.class, true);
        Action action = (Action) Mockingbird.getProxyObject(Action.class);
        Input input = (Input) Mockingbird.getProxyObject(Input.class);
        Object obj = Mockingbird.getProxyObject(Object.class);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(action.getInput(), input);
        Mockingbird.setReturnValue(input.getValue(""), obj);
        Mockingbird.setReturnValue(basicConverter.convert(obj), null);
        Mockingbird.enterTestMode(BasicConverter.class);
        Object result = basicConverter.convert("", action);
        assertNull("result", result);
    }
    
    public void testConvertThrowsConversionException() throws Throwable {
        BasicConverter integerConverter = new IntegerConverter();
        SuccessAction action = (SuccessAction) Mockingbird.getProxyObject(SuccessAction.class);
        Mockingbird.enterRecordingMode();
        Input inputMap = (Input) Mockingbird.getProxyObject(Input.class);
        Mockingbird.setReturnValue(action.getInput(), inputMap);
        Mockingbird.setReturnValue(inputMap.getValue("testBasicConverterParam1"), null);
        Mockingbird.enterTestMode(BasicConverter.class);
        try {
            integerConverter.convert("testBasicConverterField", action);
            fail("Expected ConversionException to be thrown");
        } catch (ConversionException ex) {
            assertEquals("ex.getMessage()", "Cannot convert null!", ex.getMessage());
            assertThrownBy(BasicConverter.class, ex);
        }
    }
    
    public void testConvertThrowsNullPointerException() throws Throwable {
        Action action = new SuccessAction();
        try {
            new IntegerConverter().convert("testBasicConverterField", action);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(BasicConverter.class, ex);
        }
    }
    
    public void testConvertThrowsNullPointerException1() throws Throwable {
        try {
            new IntegerConverter().convert("testBasicConverterField", null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(BasicConverter.class, ex);
        }
    }
}


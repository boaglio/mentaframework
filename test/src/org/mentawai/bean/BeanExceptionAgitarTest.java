/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:32:07 PM
 * Time to generate: 00:18.124 seconds
 *
 */

package org.mentawai.bean;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;

public class BeanExceptionAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return BeanException.class;
    }
    
    public void testConstructor() throws Throwable {
        BeanException beanException = new BeanException();
        assertNull("beanException.rootCause", beanException.rootCause);
    }
    
    public void testConstructor1() throws Throwable {
        Throwable noSuchFieldError = new NoSuchFieldError();
        BeanException beanException = new BeanException("testBeanExceptionMsg", new Throwable(noSuchFieldError));
        assertSame("beanException.rootCause", noSuchFieldError, beanException.rootCause);
        assertSame("beanException.getCause()", noSuchFieldError, beanException.getCause());
        assertEquals("beanException.getMessage()", "testBeanExceptionMsg", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor2() throws Throwable {
        Throwable e = new BeanException("testBeanExceptionMsg");
        BeanException beanException = new BeanException(e);
        assertSame("beanException.rootCause", e, beanException.rootCause);
        assertSame("beanException.getCause()", e, beanException.getCause());
        assertEquals("beanException.getMessage()", "testBeanExceptionMsg", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor3() throws Throwable {
        Throwable classCastException = new ClassCastException();
        Throwable e = new Throwable(classCastException);
        Throwable numberFormatException = new NumberFormatException();
        classCastException.initCause(numberFormatException);
        BeanException beanException = new BeanException("testBeanExceptionMsg", e);
        assertSame("beanException.rootCause", numberFormatException, beanException.rootCause);
        assertSame("beanException.getCause()", numberFormatException, beanException.getCause());
        assertEquals("beanException.getMessage()", "testBeanExceptionMsg", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor4() throws Throwable {
        Throwable e = new BeanException("testBeanExceptionMsg");
        BeanException beanException = new BeanException("testBeanExceptionMsg", e);
        assertSame("beanException.rootCause", e, beanException.rootCause);
        assertSame("beanException.getCause()", e, beanException.getCause());
        assertEquals("beanException.getMessage()", "testBeanExceptionMsg", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor5() throws Throwable {
        BeanException beanException = new BeanException("testBeanExceptionMsg");
        assertNull("beanException.rootCause", beanException.rootCause);
        assertEquals("beanException.getMessage()", "testBeanExceptionMsg", beanException.getMessage());
    }
    
    public void testConstructor6() throws Throwable {
        Throwable e = new CloneNotSupportedException("");
        BeanException beanException = new BeanException(e);
        assertSame("beanException.rootCause", e, beanException.rootCause);
        assertSame("beanException.getCause()", e, beanException.getCause());
        assertEquals("beanException.getMessage()", "java.lang.CloneNotSupportedException", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor7() throws Throwable {
        Throwable e = new ClassCastException();
        Throwable numberFormatException = new NumberFormatException();
        e.initCause(numberFormatException);
        BeanException beanException = new BeanException(e);
        assertSame("beanException.rootCause", numberFormatException, beanException.rootCause);
        assertSame("beanException.getCause()", numberFormatException, beanException.getCause());
        assertEquals("beanException.getMessage()", "java.lang.NumberFormatException", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor8() throws Throwable {
        Throwable beanException = new BeanException("testBeanExceptionMsg");
        BeanException beanException2 = new BeanException(new Throwable(beanException));
        assertSame("beanException2.rootCause", beanException, beanException2.rootCause);
        assertSame("beanException2.getCause()", beanException, beanException2.getCause());
        assertEquals("beanException2.getMessage()", "testBeanExceptionMsg", beanException2.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor9() throws Throwable {
        Throwable e = new BeanException();
        BeanException beanException = new BeanException(e);
        assertSame("beanException.rootCause", e, beanException.rootCause);
        assertSame("beanException.getCause()", e, beanException.getCause());
        assertEquals("beanException.getMessage()", "org.mentawai.bean.BeanException", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor10() throws Throwable {
        Throwable e = new BeanException();
        BeanException beanException = new BeanException(new BeanException(e));
        assertSame("beanException.rootCause", e, beanException.rootCause);
        assertSame("beanException.getCause()", e, beanException.getCause());
        assertEquals("beanException.getMessage()", "org.mentawai.bean.BeanException", beanException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testGetCause() throws Throwable {
        Throwable thr = new Throwable((Throwable) null);
        Throwable e = new ArrayStoreException();
        e.initCause(thr);
        Throwable result = new BeanException(e).getCause();
        assertSame("result", thr, result);
    }
    
    public void testGetCause1() throws Throwable {
        Throwable result = new BeanException().getCause();
        assertNull("result", result);
    }
    
    public void testGetMsg() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new BeanException("", new NoSuchFieldError())});
        assertEquals("result", "java.lang.NoSuchFieldError", result);
    }
    
    public void testGetMsg1() throws Throwable {
        Throwable classCircularityError = new ClassCircularityError();
        classCircularityError.initCause(new Throwable(""));
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {classCircularityError});
        assertEquals("result", "java.lang.Throwable", result);
    }
    
    public void testGetMsg2() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new BeanException("testBeanExceptionMsg", new NoSuchFieldError())});
        assertEquals("result", "testBeanExceptionMsg", result);
    }
    
    public void testGetMsg3() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new IncompatibleClassChangeError("testBeanExceptionParam1")});
        assertEquals("result", "testBeanExceptionParam1", result);
    }
    
    public void testGetMsg4() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new NullPointerException()});
        assertEquals("result", "java.lang.NullPointerException", result);
    }
    
    public void testGetMsg5() throws Throwable {
        Throwable nullPointerException = new NullPointerException();
        nullPointerException.initCause(new IncompatibleClassChangeError());
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {nullPointerException});
        assertEquals("result", "java.lang.IncompatibleClassChangeError", result);
    }
    
    public void testGetMsg6() throws Throwable {
        Throwable classCircularityError = new ClassCircularityError();
        classCircularityError.initCause(new Throwable("testBeanExceptionParam1"));
        String result = (String) callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {classCircularityError});
        assertEquals("result", "testBeanExceptionParam1", result);
    }
    
    public void testGetRootCause() throws Throwable {
        Throwable classCastException = new ClassCastException();
        Throwable thr = new Throwable(classCastException);
        Throwable numberFormatException = new NumberFormatException();
        classCastException.initCause(numberFormatException);
        Throwable result = (Throwable) callPrivateMethod("org.mentawai.bean.BeanException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {thr});
        assertSame("result", numberFormatException, result);
    }
    
    public void testGetRootCause1() throws Throwable {
        Throwable thr = (Throwable) Mockingbird.getProxyObject(Throwable.class);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(false, thr, "getCause", "()java.lang.Throwable", new Object[] {}, null, 1);
        Mockingbird.enterTestMode(BeanException.class);
        Throwable result = (Throwable) callPrivateMethod("org.mentawai.bean.BeanException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {thr});
        assertSame("result", thr, result);
    }
    
    public void testGetRootCause2() throws Throwable {
        Throwable e = new ArrayStoreException();
        Throwable result = (Throwable) callPrivateMethod("org.mentawai.bean.BeanException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {new BeanException("testBeanExceptionMsg", e)});
        assertSame("result", e, result);
    }
    
    public void testGetMsgThrowsNullPointerException() throws Throwable {
        Mockingbird.enterRecordingMode();
        Object rootCause = callPrivateMethod("org.mentawai.bean.BeanException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {null});
        Mockingbird.setException(rootCause, (Throwable) Mockingbird.getProxyObject(NullPointerException.class));
        Mockingbird.enterTestMode(BeanException.class);
        try {
            callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertTrue("Test call resulted in expected outcome", true);
        }
    }
    
    public void testGetMsgThrowsNullPointerException1() throws Throwable {
        try {
            callPrivateMethod("org.mentawai.bean.BeanException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(BeanException.class, ex);
        }
    }
    
    public void testGetRootCauseThrowsNullPointerException() throws Throwable {
        try {
            callPrivateMethod("org.mentawai.bean.BeanException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(BeanException.class, ex);
        }
    }
}


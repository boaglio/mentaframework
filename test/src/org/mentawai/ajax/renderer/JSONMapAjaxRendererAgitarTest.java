/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:48:29 PM
 * Time to generate: 00:15.662 seconds
 *
 */

package org.mentawai.ajax.renderer;

import com.agitar.lib.junit.AgitarTestCase;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import net.sf.json.JSONObject;
import org.mentawai.core.ConsequenceException;

public class JSONMapAjaxRendererAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return JSONMapAjaxRenderer.class;
    }
    
    public void testConstructor() throws Throwable {
        JSONMapAjaxRenderer jSONMapAjaxRenderer = new JSONMapAjaxRenderer();
        assertEquals("jSONMapAjaxRenderer.getContentType()", "text/html", jSONMapAjaxRenderer.getContentType());
    }
    
    public void testEncode() throws Throwable {
        String result = new JSONMapAjaxRenderer().encode(new HashMap(100, 100.0F), Locale.GERMAN, true);
        assertEquals("result", "{}", result);
    }
    
    public void testEncode1() throws Throwable {
        String result = new JSONMapAjaxRenderer().encode(new HashMap(100, 100.0F), Locale.JAPANESE, false);
        assertEquals("result", "{}", result);
    }
    
    public void testEncode2() throws Throwable {
        String result = new JSONMapAjaxRenderer().encode(new JSONObject(), Locale.GERMAN, true);
        assertEquals("result", "{}", result);
    }
    
    public void testEncode3() throws Throwable {
        String result = new JSONMapAjaxRenderer().encode(new JSONObject(), Locale.TRADITIONAL_CHINESE, false);
        assertEquals("result", "{}", result);
    }
    
    public void testGetContentType() throws Throwable {
        String result = new JSONMapAjaxRenderer().getContentType();
        assertEquals("result", "text/html", result);
    }
    
    public void testEncodeThrowsConsequenceException() throws Throwable {
        try {
            new JSONMapAjaxRenderer().encode("", Locale.US, true);
            fail("Expected ConsequenceException to be thrown");
        } catch (ConsequenceException ex) {
            assertEquals("ex.getMessage()", "Value is not a Collection or JSONObject: ", ex.getMessage());
            assertThrownBy(JSONMapAjaxRenderer.class, ex);
        }
    }
    
    public void testEncodeThrowsNullPointerException() throws Throwable {
        Locale loc = Locale.GERMANY;
        Map obj = new HashMap(100, 100.0F);
        obj.put(null, "");
        try {
            new JSONMapAjaxRenderer().encode(obj, loc, true);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(JSONObject.class, ex);
        }
    }
}


/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:47:57 PM
 * Time to generate: 00:16.857 seconds
 *
 */

package org.mentawai.ajax.renderer;

import com.agitar.lib.junit.AgitarTestCase;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Locale;
import net.sf.json.JSONArray;
import net.sf.json.JSONUtils;

public class JSONArrayAjaxRendererAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return JSONArrayAjaxRenderer.class;
    }
    
    public void testConstructor() throws Throwable {
        JSONArrayAjaxRenderer jSONArrayAjaxRenderer = new JSONArrayAjaxRenderer();
        assertEquals("jSONArrayAjaxRenderer.getContentType()", "text/html", jSONArrayAjaxRenderer.getContentType());
    }
    
    public void testEncode() throws Throwable {
        String result = new JSONArrayAjaxRenderer().encode(new JSONArray(), Locale.KOREAN, true);
        assertEquals("result", "[]", result);
    }
    
    public void testEncode1() throws Throwable {
        String result = new JSONArrayAjaxRenderer().encode(new ArrayList(100), Locale.ITALIAN, false);
        assertEquals("result", "[]", result);
    }
    
    public void testEncode2() throws Throwable {
        String result = new JSONArrayAjaxRenderer().encode(new ArrayList(100), Locale.GERMAN, true);
        assertEquals("result", "[]", result);
    }
    
    public void testEncode3() throws Throwable {
        String result = new JSONArrayAjaxRenderer().encode(new JSONArray(), Locale.GERMAN, false);
        assertEquals("result", "[]", result);
    }
    
    public void testGetContentType() throws Throwable {
        String result = new JSONArrayAjaxRenderer().getContentType();
        assertEquals("result", "text/html", result);
    }
    
    public void testEncodeThrowsIllegalArgumentException() throws Throwable {
        try {
            new JSONArrayAjaxRenderer().encode(new Integer(0), Locale.JAPANESE, true);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException ex) {
            assertEquals("ex.getMessage()", "Value is not a Collection or JSONArray: 0", ex.getMessage());
            assertThrownBy(JSONArrayAjaxRenderer.class, ex);
        }
    }
    
    public void testEncodeThrowsNoClassDefFoundError() throws Throwable {
        char[] chars = new char[0];
        Collection obj = new ArrayList(100);
        try {
            new JSONArrayAjaxRenderer().encode(obj, Locale.GERMAN, obj.add(chars));
            fail("Expected NoClassDefFoundError to be thrown");
        } catch (NoClassDefFoundError ex) {
            assertEquals("ex.getMessage()", "org/apache/commons/lang/ArrayUtils", ex.getMessage());
            assertThrownBy(JSONUtils.class, ex);
        }
    }
}


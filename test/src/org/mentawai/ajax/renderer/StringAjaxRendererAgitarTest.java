/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 6:49:10 PM
 * Time to generate: 00:14.958 seconds
 *
 */

package org.mentawai.ajax.renderer;

import com.agitar.lib.junit.AgitarTestCase;
import java.util.Locale;

public class StringAjaxRendererAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return StringAjaxRenderer.class;
    }
    
    public void testConstructor() throws Throwable {
        StringAjaxRenderer stringAjaxRenderer = new StringAjaxRenderer("testStringAjaxRendererTagName");
        assertEquals("stringAjaxRenderer.tagName", "testStringAjaxRendererTagName", getPrivateField(stringAjaxRenderer, "tagName"));
    }
    
    public void testConstructor1() throws Throwable {
        StringAjaxRenderer stringAjaxRenderer = new StringAjaxRenderer();
        assertEquals("stringAjaxRenderer.tagName", "value", getPrivateField(stringAjaxRenderer, "tagName"));
    }
    
    public void testEncode() throws Throwable {
        String result = new StringAjaxRenderer("testStringAjaxRendererTagName").encode("", Locale.GERMAN, true);
        assertEquals("result", "<testStringAjaxRendererTagName></testStringAjaxRendererTagName>", result);
    }
    
    public void testGetContentType() throws Throwable {
        String result = new StringAjaxRenderer("testStringAjaxRendererTagName").getContentType();
        assertEquals("result", "text/xml", result);
    }
    
    public void testEncodeThrowsIllegalArgumentException() throws Throwable {
        try {
            new StringAjaxRenderer("testStringAjaxRendererTagName").encode(new Integer(0), Locale.GERMAN, true);
            fail("Expected IllegalArgumentException to be thrown");
        } catch (IllegalArgumentException ex) {
            assertEquals("ex.getMessage()", "Value is not a String: 0", ex.getMessage());
            assertThrownBy(StringAjaxRenderer.class, ex);
        }
    }
}


/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 5:52:01 PM
 * Time to generate: 00:15.345 seconds
 *
 */

package org.mentawai.rule;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import java.util.Map;

public class NumberRuleAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return NumberRule.class;
    }
    
    public void testConstructor() throws Throwable {
        NumberRule numberRule = new NumberRule();
        assertNull("numberRule.getTokens()", numberRule.getTokens());
    }
    
    public void testCheck() throws Throwable {
        boolean result = NumberRule.getInstance().check("K");
        assertFalse("result", result);
    }
    
    public void testCheck3() throws Throwable {
        boolean result = new NumberRule().check("11");
        assertTrue("result", result);
    }
    
    public void testGetInstance() throws Throwable {
        NumberRule result = NumberRule.getInstance();
        assertNull("result.getTokens()", result.getTokens());
    }
    
    public void testGetInstance1() throws Throwable {
        storeStaticField(NumberRule.class, "cache");
        Mockingbird.enterRecordingMode();
        Mockingbird.replaceObjectForRecording(NumberRule.class, "<init>()", new NumberRule());
        setPrivateField(NumberRule.class, "cache", null);
        Mockingbird.enterTestMode(NumberRule.class);
        NumberRule result = NumberRule.getInstance();
        assertNull("result.getTokens()", result.getTokens());
        assertNotNull("NumberRule.cache", getPrivateField(NumberRule.class, "cache"));
    }
    
    public void testGetTokens() throws Throwable {
        Map result = new NumberRule().getTokens();
        assertNull("result", result);
    }
}


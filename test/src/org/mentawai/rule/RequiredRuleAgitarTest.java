/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 5:52:55 PM
 * Time to generate: 00:13.933 seconds
 *
 */

package org.mentawai.rule;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;
import java.util.Map;

public class RequiredRuleAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return RequiredRule.class;
    }
    
    public void testConstructor() throws Throwable {
        RequiredRule requiredRule = new RequiredRule();
        assertNull("requiredRule.getTokens()", requiredRule.getTokens());
    }
    
    public void testGetInstance() throws Throwable {
        RequiredRule result = RequiredRule.getInstance();
        assertNull("result.getTokens()", result.getTokens());
    }
    
    public void testGetInstance1() throws Throwable {
        storeStaticField(RequiredRule.class, "cache");
        Mockingbird.enterRecordingMode();
        Mockingbird.replaceObjectForRecording(RequiredRule.class, "<init>()", new RequiredRule());
        setPrivateField(RequiredRule.class, "cache", null);
        Mockingbird.enterTestMode(RequiredRule.class);
        RequiredRule result = RequiredRule.getInstance();
        assertNull("result.getTokens()", result.getTokens());
        assertNotNull("RequiredRule.cache", getPrivateField(RequiredRule.class, "cache"));
    }
    
    public void testGetTokens() throws Throwable {
        Map result = new RequiredRule().getTokens();
        assertNull("result", result);
    }
}


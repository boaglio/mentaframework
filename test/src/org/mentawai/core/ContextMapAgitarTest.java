/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 7:23:31 PM
 * Time to generate: 00:19.587 seconds
 *
 */

package org.mentawai.core;

import com.agitar.lib.junit.AgitarTestCase;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

public class ContextMapAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return MapContext.class;
    }
    
    public void testConstructor() throws Throwable {
        MapContext contextMap = new MapContext();
        assertEquals("contextMap.values.size()", 0, ((Map) getPrivateField(contextMap, "values")).size());
    }
    
    public void testConstructor1() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testGetAttribute() throws Throwable {
        MapContext contextMap = new MapContext();
        Object result = contextMap.getAttribute("testContextMapName");
        assertNull("result", result);
        assertEquals("contextMap.values.size()", 0, ((Map) getPrivateField(contextMap, "values")).size());
    }
    
    public void testGetAttribute1() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        Boolean boolean2 = Boolean.FALSE;
        values.put("x", boolean2);
        MapContext contextMap = new MapContext(values);
        Boolean result = (Boolean) contextMap.getAttribute("x");
        assertSame("result", boolean2, result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testGetAttribute2() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        values.put("testString", "testString");
        MapContext contextMap = new MapContext(values);
        String result = (String) contextMap.getAttribute("testString");
        assertEquals("result", "testString", result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testGetAttribute3() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        Boolean boolean2 = Boolean.TRUE;
        values.put("testString", boolean2);
        MapContext contextMap = new MapContext(values);
        Boolean result = (Boolean) contextMap.getAttribute("testString");
        assertSame("result", boolean2, result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testGetAttribute4() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        Integer integer = new Integer(2);
        values.put("-", integer);
        MapContext contextMap = new MapContext(values);
        Integer result = (Integer) contextMap.getAttribute("-");
        assertSame("result", integer, result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testGetAttribute5() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        Integer integer = new Integer(0);
        values.put("{f\tlcTl\fZ]h!b<l~G", integer);
        MapContext contextMap = new MapContext(values);
        Integer result = (Integer) contextMap.getAttribute("{f\tlcTl\fZ]h!b<l~G");
        assertSame("result", integer, result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testHasAttribute() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        values.put("testString", new Integer(0));
        MapContext contextMap = new MapContext(values);
        boolean result = contextMap.hasAttribute("testString");
        assertTrue("result", result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testHasAttribute1() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        boolean result = contextMap.hasAttribute("testContextMapName");
        assertFalse("result", result);
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testKeys() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        values.put("\nI;ZQ^{3\t/", "abcdefghijklmnopqrstuvwxyz");
        MapContext contextMap = new MapContext(values);
        Iterator result = contextMap.keys();
        assertTrue("result.hasNext()", result.hasNext());
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testKeys1() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        Iterator result = contextMap.keys();
        assertFalse("result.hasNext()", result.hasNext());
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testRemoveAttribute() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        contextMap.removeAttribute("testContextMapName");
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testReset() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        contextMap.reset();
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
    }
    
    public void testSetAttribute() throws Throwable {
        Map values = new HashMap(100, 100.0F);
        MapContext contextMap = new MapContext(values);
        contextMap.setAttribute("testContextMapName", new Integer(0));
        assertSame("contextMap.values", values, getPrivateField(contextMap, "values"));
        assertEquals("contextMap.values.get(\"testContextMapName\")", new Integer(0), ((Map) getPrivateField(contextMap, "values")).get("testContextMapName"));
    }
    
    public void testGetAttributeThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.getAttribute("testContextMapName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
    
    public void testHasAttributeThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.hasAttribute("testContextMapName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
    
    public void testKeysThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.keys();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
    
    public void testRemoveAttributeThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.removeAttribute("testContextMapName");
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
    
    public void testResetThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.reset();
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
    
    public void testSetAttributeThrowsNullPointerException() throws Throwable {
        MapContext contextMap = new MapContext(null);
        try {
            contextMap.setAttribute("testContextMapName", new Integer(0));
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(MapContext.class, ex);
            assertNull("contextMap.values", getPrivateField(contextMap, "values"));
        }
    }
}


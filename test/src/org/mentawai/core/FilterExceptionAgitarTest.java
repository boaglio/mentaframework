/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 7:27:07 PM
 * Time to generate: 00:17.522 seconds
 *
 */

package org.mentawai.core;

import com.agitar.lib.junit.AgitarTestCase;
import com.agitar.lib.mockingbird.Mockingbird;

public class FilterExceptionAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return FilterException.class;
    }
    
    public void testConstructor() throws Throwable {
        Throwable e = new IncompatibleClassChangeError();
        Throwable e2 = new FilterException("testFilterExceptionMsg", e);
        Throwable nullPointerException = new NullPointerException("testFilterExceptionParam1");
        e.initCause(nullPointerException);
        FilterException filterException = new FilterException("testFilterExceptionMsg", e2);
        assertSame("filterException.rootCause", nullPointerException, filterException.rootCause);
        assertSame("filterException.getCause()", nullPointerException, filterException.getCause());
        assertEquals("filterException.getMessage()", "testFilterExceptionMsg", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor1() throws Throwable {
        Throwable e = new UnknownError();
        FilterException filterException = new FilterException("testFilterExceptionMsg", new FilterException("testFilterExceptionMsg", e));
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "testFilterExceptionMsg", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor2() throws Throwable {
        FilterException filterException = new FilterException("testFilterExceptionMsg");
        assertNull("filterException.rootCause", filterException.rootCause);
        assertEquals("filterException.getMessage()", "testFilterExceptionMsg", filterException.getMessage());
    }
    
    public void testConstructor3() throws Throwable {
        Throwable e = new FilterException("testFilterExceptionMsg");
        FilterException filterException = new FilterException("testFilterExceptionMsg", e);
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "testFilterExceptionMsg", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor4() throws Throwable {
        Throwable e = new CloneNotSupportedException("");
        FilterException filterException = new FilterException(e);
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "java.lang.CloneNotSupportedException", filterException.getMessage());
    }
    
    public void testConstructor5() throws Throwable {
        Throwable e = new CloneNotSupportedException();
        FilterException filterException = new FilterException(new FilterException("", e));
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "java.lang.CloneNotSupportedException", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor6() throws Throwable {
        Throwable e = new ClassCircularityError();
        Throwable incompatibleClassChangeError = new IncompatibleClassChangeError();
        e.initCause(incompatibleClassChangeError);
        FilterException filterException = new FilterException(e);
        assertSame("filterException.rootCause", incompatibleClassChangeError, filterException.rootCause);
        assertSame("filterException.getCause()", incompatibleClassChangeError, filterException.getCause());
        assertEquals("filterException.getMessage()", "java.lang.IncompatibleClassChangeError", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor7() throws Throwable {
        Throwable e = new NullPointerException("testFilterExceptionParam1");
        FilterException filterException = new FilterException(e);
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "testFilterExceptionParam1", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor8() throws Throwable {
        Throwable e = new FilterException();
        FilterException filterException = new FilterException(e);
        assertSame("filterException.rootCause", e, filterException.rootCause);
        assertSame("filterException.getCause()", e, filterException.getCause());
        assertEquals("filterException.getMessage()", "org.mentawai.core.FilterException", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor9() throws Throwable {
        Throwable noSuchFieldError = new NoSuchFieldError();
        FilterException filterException = new FilterException(new Throwable(noSuchFieldError));
        assertSame("filterException.rootCause", noSuchFieldError, filterException.rootCause);
        assertSame("filterException.getCause()", noSuchFieldError, filterException.getCause());
        assertEquals("filterException.getMessage()", "java.lang.NoSuchFieldError", filterException.getMessage());
        // dependencies on static and environment state led to removal of 1 assertion
    }
    
    public void testConstructor10() throws Throwable {
        FilterException filterException = new FilterException();
        assertNull("filterException.rootCause", filterException.rootCause);
    }
    
    public void testGetCause() throws Throwable {
        Throwable noSuchFieldError = new NoSuchFieldError();
        Throwable result = new FilterException("testFilterExceptionMsg", new Throwable(noSuchFieldError)).getCause();
        assertSame("result", noSuchFieldError, result);
    }
    
    public void testGetCause1() throws Throwable {
        Throwable result = new FilterException().getCause();
        assertNull("result", result);
    }
    
    public void testGetMsg() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new FilterException("", new CloneNotSupportedException())});
        assertEquals("result", "java.lang.CloneNotSupportedException", result);
    }
    
    public void testGetMsg1() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new FilterException(" ", new CloneNotSupportedException())});
        assertEquals("result", " ", result);
    }
    
    public void testGetMsg2() throws Throwable {
        Throwable nullPointerException = new NullPointerException();
        nullPointerException.initCause(new ClassCastException());
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {nullPointerException});
        assertEquals("result", "java.lang.ClassCastException", result);
    }
    
    public void testGetMsg3() throws Throwable {
        Throwable filterException = new FilterException("testFilterExceptionMsg", new Throwable(new UnknownError("testFilterExceptionParam1")));
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {filterException});
        assertEquals("result", "testFilterExceptionParam1", result);
    }
    
    public void testGetMsg4() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new NullPointerException()});
        assertEquals("result", "java.lang.NullPointerException", result);
    }
    
    public void testGetMsg5() throws Throwable {
        String result = (String) callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {new IncompatibleClassChangeError("testFilterExceptionParam1")});
        assertEquals("result", "testFilterExceptionParam1", result);
    }
    
    public void testGetRootCause() throws Throwable {
        Throwable classCircularityError = new ClassCircularityError();
        Throwable classCastException = new ClassCastException();
        classCastException.initCause(classCircularityError);
        Throwable incompatibleClassChangeError = new IncompatibleClassChangeError();
        classCircularityError.initCause(incompatibleClassChangeError);
        Throwable result = (Throwable) callPrivateMethod("org.mentawai.core.FilterException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {classCastException});
        assertSame("result", incompatibleClassChangeError, result);
    }
    
    public void testGetRootCause1() throws Throwable {
        Throwable noSuchFieldError = new NoSuchFieldError();
        Throwable result = (Throwable) callPrivateMethod("org.mentawai.core.FilterException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {new Throwable(noSuchFieldError)});
        assertSame("result", noSuchFieldError, result);
    }
    
    public void testGetRootCause2() throws Throwable {
        CloneNotSupportedException cloneNotSupportedException = (CloneNotSupportedException) Mockingbird.getProxyObject(CloneNotSupportedException.class);
        Mockingbird.enterRecordingMode();
        Mockingbird.setReturnValue(false, cloneNotSupportedException, "getCause", "()java.lang.Throwable", new Object[] {}, null, 1);
        Mockingbird.enterTestMode(FilterException.class);
        CloneNotSupportedException result = (CloneNotSupportedException) callPrivateMethod("org.mentawai.core.FilterException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {cloneNotSupportedException});
        assertSame("result", cloneNotSupportedException, result);
    }
    
    public void testGetMsgThrowsNullPointerException() throws Throwable {
        Mockingbird.enterRecordingMode();
        Object rootCause = callPrivateMethod("org.mentawai.core.FilterException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {null});
        Mockingbird.setException(rootCause, (Throwable) Mockingbird.getProxyObject(NullPointerException.class));
        Mockingbird.enterTestMode(FilterException.class);
        try {
            callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertTrue("Test call resulted in expected outcome", true);
        }
    }
    
    public void testGetMsgThrowsNullPointerException1() throws Throwable {
        try {
            callPrivateMethod("org.mentawai.core.FilterException", "getMsg", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(FilterException.class, ex);
        }
    }
    
    public void testGetRootCauseThrowsNullPointerException() throws Throwable {
        try {
            callPrivateMethod("org.mentawai.core.FilterException", "getRootCause", new Class[] {Throwable.class}, null, new Object[] {null});
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(FilterException.class, ex);
        }
    }
}


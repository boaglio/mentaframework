/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 7:29:08 PM
 * Time to generate: 00:18.245 seconds
 *
 */

package org.mentawai.core;

import com.agitar.lib.junit.AgitarTestCase;
import java.util.Iterator;
import java.util.Map;

public class OutputMapAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return MapOutput.class;
    }
    
    public void testConstructor() throws Throwable {
        MapOutput outputMap = new MapOutput();
        assertEquals("outputMap.map.size()", 0, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testGetValue() throws Throwable {
        MapOutput outputMap = new MapOutput();
        Object result = outputMap.getValue("testOutputMapName");
        assertNull("result", result);
        assertEquals("outputMap.map.size()", 0, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testGetValue1() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.setValue("testString", "");
        String result = (String) outputMap.getValue("testString");
        assertEquals("result", "", result);
        assertEquals("outputMap.map.size()", 1, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testGetValue2() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.setValue("testString", new Integer(0));
        Integer result = (Integer) outputMap.getValue("testString");
        assertEquals("result", 0, result.intValue());
        assertEquals("outputMap.map.size()", 1, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testIsEmpty() throws Throwable {
        MapOutput outputMap = new MapOutput();
        boolean result = outputMap.isEmpty();
        assertTrue("result", result);
        assertEquals("outputMap.map.size()", 0, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testIsEmpty1() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.setValue("testOutputMapName", "testString");
        boolean result = outputMap.isEmpty();
        assertFalse("result", result);
        assertEquals("outputMap.map.size()", 1, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testKeys() throws Throwable {
        MapOutput outputMap = new MapOutput();
        Iterator result = outputMap.keys();
        assertFalse("result.hasNext()", result.hasNext());
        assertEquals("outputMap.map.size()", 0, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testKeys1() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.setValue("testOutputMapName", new Integer(0));
        Iterator result = outputMap.keys();
        assertTrue("result.hasNext()", result.hasNext());
        assertEquals("outputMap.map.size()", 1, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testRemoveValue() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.removeValue("testOutputMapName");
        assertEquals("outputMap.map.size()", 0, ((Map) getPrivateField(outputMap, "map")).size());
    }
    
    public void testSetValue() throws Throwable {
        MapOutput outputMap = new MapOutput();
        outputMap.setValue("testOutputMapName", "");
        assertEquals("outputMap.map.size()", 1, ((Map) getPrivateField(outputMap, "map")).size());
        assertEquals("outputMap.map.get(\"testOutputMapName\")", "", ((Map) getPrivateField(outputMap, "map")).get("testOutputMapName"));
    }
}


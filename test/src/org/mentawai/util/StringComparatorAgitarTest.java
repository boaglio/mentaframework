/**
 * Generated by Agitar build: JUnitFactory Version 2.1.0.000576 (Build date: Oct 19, 2007) [2.1.0.000576]
 * JDK Version: 1.5.0_11
 *
 * Generated on Nov 8, 2007 4:47:44 PM
 * Time to generate: 00:15.493 seconds
 *
 */

package org.mentawai.util;

import com.agitar.lib.junit.AgitarTestCase;

public class StringComparatorAgitarTest extends AgitarTestCase {
    
    public Class getTargetClass()  {
        return StringComparator.class;
    }
    
    public void testConstructor() throws Throwable {
        new StringComparator();
        assertTrue("Test call resulted in expected outcome", true);
    }
    
    public void testCompare() throws Throwable {
        int result = new StringComparator().compare("testString", "testString");
        assertEquals("result", 0, result);
    }
    
    public void testCompare1() throws Throwable {
        int result = new StringComparator().compare("testString", "1");
        assertEquals("result", 67, result);
    }
    
    public void testCompare2() throws Throwable {
        int result = new StringComparator().compare("ÀàÈjÌìÒòÙùÁáÉéÍíÓóÚúİıÂâÊêÎîÔôÛû\u0176\u0177ÂâÊêÎîÔôÛû\u0176\u0177ÄäËëÏïÖöÜüŸÿÅåÇç", "testString");
        assertEquals("result", -19, result);
    }
    
    public void testCompare3() throws Throwable {
        int result = new StringComparator().compare("testString", null);
        assertEquals("result", 1, result);
    }
    
    public void testCompare4() throws Throwable {
        int result = new StringComparator().compare(null, "testString");
        assertEquals("result", -1, result);
    }
    
    public void testCompare5() throws Throwable {
        int result = new StringComparator().compare(null, null);
        assertEquals("result", 0, result);
    }
    
    public void testRemoveAccents() throws Throwable {
        String result = StringComparator.removeAccents("ÀàÈèÌìÒòÙùÁáÉéÍíÓóÚúİıÂâÊêÎîÔôÛû\u0176\u0177ÂâÊêÎîÔôÛû\u0176\u0177ÄäËëÏïÖöÜüŸÿÅåÇç");
        assertEquals("result", "AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaEeIiOoUuYyAaEeIiOoUuYyAaCc", result);
    }
    
    public void testRemoveAccents1() throws Throwable {
        String result = StringComparator.removeAccents("testStringComparators");
        assertEquals("result", "testStringComparators", result);
    }
    
    public void testRemoveAccents2() throws Throwable {
        String result = StringComparator.removeAccents("ÀàÈèÌìÒòÙùÁáÉéÍíÓóÚúİıÂâÊêÎîÔôÛû\u0176\u0177ÂâÊêÎîÔôÛû\u0176\u0177ÄäËëÏUÖöÜüŸÿÅåÇç");
        assertEquals("result", "AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaEeIiOoUuYyAaEeIUOoUuYyAaCc", result);
    }
    
    public void testRemoveAccents3() throws Throwable {
        String result = StringComparator.removeAccents("");
        assertEquals("result", "", result);
    }
    
    public void testCompareThrowsClassCastException() throws Throwable {
        try {
            new StringComparator().compare("testString", new Integer(1));
            fail("Expected ClassCastException to be thrown");
        } catch (ClassCastException ex) {
            assertEquals("ex.getClass()", ClassCastException.class, ex.getClass());
            assertThrownBy(StringComparator.class, ex);
        }
    }
    
    public void testCompareThrowsClassCastException1() throws Throwable {
        try {
            new StringComparator().compare(new StringComparator(), "true");
            fail("Expected ClassCastException to be thrown");
        } catch (ClassCastException ex) {
            assertEquals("ex.getClass()", ClassCastException.class, ex.getClass());
            assertThrownBy(StringComparator.class, ex);
        }
    }
    
    public void testRemoveAccentsThrowsNullPointerException() throws Throwable {
        try {
            StringComparator.removeAccents(null);
            fail("Expected NullPointerException to be thrown");
        } catch (NullPointerException ex) {
            assertNull("ex.getMessage()", ex.getMessage());
            assertThrownBy(StringComparator.class, ex);
        }
    }
}

